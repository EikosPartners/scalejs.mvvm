{"version":3,"sources":["../src/scalejs.mvvm.js"],"names":["bindingHandlers","change","render","virtualElements","allowedBindings","registerExtension","init","core","mvvm","root","template","dataClass","dataBinding","registerTemplates","registerBindings","getRegisteredTemplates","sandbox","observable","observableArray","computed","toJson","toObject","toViewModel"],"mappings":";;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGI,mBAAGA,eAAH,CAAmBC,MAAnB,oB,CARJ;;AASI,mBAAGD,eAAH,CAAmBE,MAAnB;;AAEA,mBAAGC,eAAH,CAAmBC,eAAnB,CAAmCH,MAAnC,GAA4C,IAA5C;AACA,mBAAGE,eAAH,CAAmBC,eAAnB,CAAmCF,MAAnC,GAA4C,IAA5C;;AAEA,kBAAKG,iBAAL;;AAEA;IACMC,I,kBAAAA,I;;AAEN;;sBACiD,eAAKC,IAAL,CAAUC,I;IAArDC,I,mBAAAA,I;IAAMC,Q,mBAAAA,Q;IAAUC,S,mBAAAA,S;IAAWC,W,mBAAAA,W;;AAEjC;;uBACsE,eAAKL,IAAL,CAAUC,I;IAA1EK,iB,oBAAAA,iB;IAAmBC,gB,oBAAAA,gB;IAAkBC,sB,oBAAAA,sB;;AAE3C;;yBACgD,eAAKC,OAAL,CAAaR,I;IAAvDS,U,sBAAAA,U;IAAYC,e,sBAAAA,e;IAAiBC,Q,sBAAAA,Q;;AAEnC;;0BACwC,eAAKH,OAAL,CAAaR,I;IAA/CY,M,uBAAAA,M;IAAQC,Q,uBAAAA,Q;IAAUC,W,uBAAAA,W;QAGpBhB,I,GAAAA,I;QACAG,I,GAAAA,I;QACAC,Q,GAAAA,Q;QACAC,S,GAAAA,S;QACAC,W,GAAAA,W;QACAC,iB,GAAAA,iB;QACAC,gB,GAAAA,gB;QACAC,sB,GAAAA,sB;QACAE,U,GAAAA,U;QACAC,e,GAAAA,e;QACAC,Q,GAAAA,Q;QACAC,M,GAAAA,M;QACAC,Q,GAAAA,Q;QACAC,W,GAAAA,W","file":"scalejs.mvvm.js","sourcesContent":["/*global define*/\r\nimport core from 'scalejs.core';\r\nimport ko from 'knockout';\r\nimport mvvm from './scalejs.mvvm/mvvm';\r\nimport changeBinding from './scalejs.bindings/change';\r\nimport renderBinding from './scalejs.bindings/render';\r\n    \r\n\r\n    ko.bindingHandlers.change = changeBinding;\r\n    ko.bindingHandlers.render = renderBinding;\r\n\r\n    ko.virtualElements.allowedBindings.change = true;\r\n    ko.virtualElements.allowedBindings.render = true;\r\n\r\n    core.registerExtension(mvvm);\r\n\r\n    // base \r\n    let { init } = mvvm;\r\n\r\n    // rendering helpers\r\n    let { root, template, dataClass, dataBinding } = mvvm.core.mvvm;\r\n\r\n    // registry\r\n    let { registerTemplates, registerBindings, getRegisteredTemplates } = mvvm.core.mvvm;\r\n\r\n    // knockout\r\n    let { observable, observableArray, computed } = mvvm.sandbox.mvvm;\r\n\r\n    // viewmodel helpers\r\n    let { toJson, toObject, toViewModel } = mvvm.sandbox.mvvm;\r\n\r\n    export {\r\n        init,\r\n        root,\r\n        template,\r\n        dataClass,\r\n        dataBinding,\r\n        registerTemplates,\r\n        registerBindings,\r\n        getRegisteredTemplates,\r\n        observable,\r\n        observableArray,\r\n        computed,\r\n        toJson,\r\n        toObject,\r\n        toViewModel\r\n    }\r\n\r\n    export default mvvm\r\n\r\n\r\n"]}