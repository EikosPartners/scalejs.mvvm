{"version":3,"sources":["../../src/scalejs.bindings/render.js"],"names":[],"mappings":";;;;;;AAEA;;;;AACA;;;;;;;;;;AAII,IAAI,KAAK,kBAAK,IAAL,CAAU,EAAnB;IACI,MAAM,kBAAK,MAAL,CAAY,GADtB;IAEI,SAAS,mBAAG,KAAH,CAAS,gBAFtB;;AAIA,SAAS,IAAT,GAAgB;AACZ,WAAO,EAAE,8BAA8B,IAAhC,EAAP;AACH;;;AAGD,SAAS,MAAT,CAAgB,OAAhB,EAAyB,aAAzB,EAAwC,mBAAxC,EAA6D,SAA7D,EAAwE,cAAxE,EAAwF;AACpF,QAAI,QAAQ,OAAO,eAAP,CAAZ;QACI,eADJ;QAEI,OAFJ;QAGI,OAHJ;QAII,MAJJ;;AAMA,aAAS,aAAT,GAAyB;AACrB,YAAI,OAAJ,EAAa;AACT,+BAAG,mBAAH,CAAuB,OAAvB,EAAgC,OAAhC,EAAyC,SAAzC;AACH,SAFD,MAEO;AACH,+BAAG,eAAH,CAAmB,SAAnB,CAA6B,OAA7B;AACH;AACJ;;AAED,QAAI,KAAJ,EAAW;AACP,YAAI,GAAG,MAAM,SAAT,EAAoB,QAApB,CAAJ,EAAmC;;AAE/B,8BAAkB,mBAAG,eAAH,CAAmB,QAAnB,CAA4B,aAA5B,CAA0C,MAAM,SAAhD,EAA2D,mBAAG,eAAH,CAAmB,QAAnB,CAA4B,QAAvF,CAAlB;AACA,gBAAI,CAAC,eAAL,EAAsB;AAClB,sBAAM,IAAI,KAAJ,CAAU,wCAAwC,MAAM,SAA9C,GACA,kCADA,GAEA,iDAFV,CAAN;AAGH;;AAED,gBAAI,eAAJ,EAAqB;AACjB,0BAAU,GAAG,eAAH,EAAoB,UAApB,IACA,gBAAgB,IAAhB,CAAqB,MAAM,SAAN,IAAmB,SAAxC,EAAmD,cAAnD,CADA,GAEA,eAFV;AAGH;AAEJ,SAfD,MAeO;;AAEH,sBAAU,GAAG,KAAH,EAAU,UAAV,IAAwB,MAAM,IAAN,CAAW,SAAX,EAAsB,cAAtB,CAAxB,GAAgE,KAA1E;AACH;AACJ;;AAED,aAAS,aAAT;;AAEA,cAAU;AACN,oBAAY,sBAAY;AACpB,mBAAO,OAAP;AACH;AAHK,KAAV;;AAMA,WAAO,IAAP,CAAY,OAAZ;;AAEA,uBAAG,KAAH,CAAS,OAAT,CAAiB,GAAjB,CAAqB,OAArB,EAA8B,SAA9B,EAAyC,OAAzC;AACH;;;kBAGc;AACX,UAAM,IADK;AAEX,YAAQ;AAFG,C","file":"render.js","sourcesContent":["/*global define,setTimeout,window*/\r\n/// <reference path=\"../Scripts/_references.js\" />\r\nimport core from 'scalejs.core';\r\nimport ko from 'knockout';\r\n    /// <param name=\"ko\" value=\"window.ko\" />\r\n    \r\n\r\n    var is = core.type.is,\r\n        has = core.object.has,\r\n        unwrap = ko.utils.unwrapObservable;\r\n\r\n    function init() {\r\n        return { 'controlsDescendantBindings': true };\r\n    }\r\n\r\n    /*jslint unparam: true*/\r\n    function update(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n        var value = unwrap(valueAccessor()),\r\n            bindingAccessor,\r\n            binding,\r\n            context,\r\n            render;\r\n\r\n        function applyBindings() {\r\n            if (binding) {\r\n                ko.applyBindingsToNode(element, binding, viewModel);\r\n            } else {\r\n                ko.virtualElements.emptyNode(element);\r\n            }\r\n        }\r\n\r\n        if (value) {\r\n            if (is(value.dataClass, 'string')) {\r\n                // if dataClass is specified then get the binding from the bindingRouter\r\n                bindingAccessor = ko.bindingProvider.instance.bindingRouter(value.dataClass, ko.bindingProvider.instance.bindings);\r\n                if (!bindingAccessor) {\r\n                    throw new Error('Don\\'t know how to render binding \"' + value.dataClass +\r\n                                    '\" - no such binding registered. ' +\r\n                                    'Either register the bindng or correct its name.');\r\n                }\r\n\r\n                if (bindingAccessor) {\r\n                    binding = is(bindingAccessor, 'function')\r\n                            ? bindingAccessor.call(value.viewmodel || viewModel, bindingContext)\r\n                            : bindingAccessor;\r\n                }\r\n\r\n            } else {\r\n                // otherwise whole object is the binding\r\n                binding = is(value, 'function') ? value.call(viewModel, bindingContext) : value;\r\n            }\r\n        }\r\n\r\n        render = applyBindings;\r\n\r\n        context = {\r\n            getElement: function () {\r\n                return element;\r\n            }\r\n        };\r\n\r\n        render.call(context);\r\n\r\n        ko.utils.domData.set(element, 'binding', binding);\r\n    }\r\n    /*jslint unparam: false*/\r\n\r\n    export default {\r\n        init: init,\r\n        update: update\r\n    };\r\n\r\n"]}