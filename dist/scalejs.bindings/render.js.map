{"version":3,"sources":["../../src/scalejs.bindings/render.js"],"names":["is","type","has","object","unwrap","utils","unwrapObservable","init","update","element","valueAccessor","allBindingsAccessor","viewModel","bindingContext","value","bindingAccessor","binding","context","render","applyBindings","applyBindingsToNode","virtualElements","emptyNode","dataClass","bindingProvider","instance","bindingRouter","bindings","Error","call","viewmodel","getElement","domData","set"],"mappings":";;;;;;AAEA;;;;AACA;;;;;;AACI;;;AAJJ;AACA;AAMI,IAAIA,KAAK,kBAAKC,IAAL,CAAUD,EAAnB;AAAA,IACIE,MAAM,kBAAKC,MAAL,CAAYD,GADtB;AAAA,IAEIE,SAAS,mBAAGC,KAAH,CAASC,gBAFtB;;AAIA,SAASC,IAAT,GAAgB;AACZ,WAAO,EAAE,8BAA8B,IAAhC,EAAP;AACH;;AAED;AACA,SAASC,MAAT,CAAgBC,OAAhB,EAAyBC,aAAzB,EAAwCC,mBAAxC,EAA6DC,SAA7D,EAAwEC,cAAxE,EAAwF;AACpF,QAAIC,QAAQV,OAAOM,eAAP,CAAZ;AAAA,QACIK,eADJ;AAAA,QAEIC,OAFJ;AAAA,QAGIC,OAHJ;AAAA,QAIIC,MAJJ;;AAMA,aAASC,aAAT,GAAyB;AACrB,YAAIH,OAAJ,EAAa;AACT,+BAAGI,mBAAH,CAAuBX,OAAvB,EAAgCO,OAAhC,EAAyCJ,SAAzC;AACH,SAFD,MAEO;AACH,+BAAGS,eAAH,CAAmBC,SAAnB,CAA6Bb,OAA7B;AACH;AACJ;;AAED,QAAIK,KAAJ,EAAW;AACP,YAAId,GAAGc,MAAMS,SAAT,EAAoB,QAApB,CAAJ,EAAmC;AAC/B;AACAR,8BAAkB,mBAAGS,eAAH,CAAmBC,QAAnB,CAA4BC,aAA5B,CAA0CZ,MAAMS,SAAhD,EAA2D,mBAAGC,eAAH,CAAmBC,QAAnB,CAA4BE,QAAvF,CAAlB;AACA,gBAAI,CAACZ,eAAL,EAAsB;AAClB,sBAAM,IAAIa,KAAJ,CAAU,wCAAwCd,MAAMS,SAA9C,GACA,kCADA,GAEA,iDAFV,CAAN;AAGH;;AAED,gBAAIR,eAAJ,EAAqB;AACjBC,0BAAUhB,GAAGe,eAAH,EAAoB,UAApB,IACAA,gBAAgBc,IAAhB,CAAqBf,MAAMgB,SAAN,IAAmBlB,SAAxC,EAAmDC,cAAnD,CADA,GAEAE,eAFV;AAGH;AAEJ,SAfD,MAeO;AACH;AACAC,sBAAUhB,GAAGc,KAAH,EAAU,UAAV,IAAwBA,MAAMe,IAAN,CAAWjB,SAAX,EAAsBC,cAAtB,CAAxB,GAAgEC,KAA1E;AACH;AACJ;;AAEDI,aAASC,aAAT;;AAEAF,cAAU;AACNc,oBAAY,sBAAY;AACpB,mBAAOtB,OAAP;AACH;AAHK,KAAV;;AAMAS,WAAOW,IAAP,CAAYZ,OAAZ;;AAEA,uBAAGZ,KAAH,CAAS2B,OAAT,CAAiBC,GAAjB,CAAqBxB,OAArB,EAA8B,SAA9B,EAAyCO,OAAzC;AACH;AACD;;kBAEe;AACXT,UAAMA,IADK;AAEXC,YAAQA;AAFG,C","file":"render.js","sourcesContent":["/*global define,setTimeout,window*/\r\n/// <reference path=\"../Scripts/_references.js\" />\r\nimport core from 'scalejs.core';\r\nimport ko from 'knockout';\r\n    /// <param name=\"ko\" value=\"window.ko\" />\r\n    \r\n\r\n    var is = core.type.is,\r\n        has = core.object.has,\r\n        unwrap = ko.utils.unwrapObservable;\r\n\r\n    function init() {\r\n        return { 'controlsDescendantBindings': true };\r\n    }\r\n\r\n    /*jslint unparam: true*/\r\n    function update(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n        var value = unwrap(valueAccessor()),\r\n            bindingAccessor,\r\n            binding,\r\n            context,\r\n            render;\r\n\r\n        function applyBindings() {\r\n            if (binding) {\r\n                ko.applyBindingsToNode(element, binding, viewModel);\r\n            } else {\r\n                ko.virtualElements.emptyNode(element);\r\n            }\r\n        }\r\n\r\n        if (value) {\r\n            if (is(value.dataClass, 'string')) {\r\n                // if dataClass is specified then get the binding from the bindingRouter\r\n                bindingAccessor = ko.bindingProvider.instance.bindingRouter(value.dataClass, ko.bindingProvider.instance.bindings);\r\n                if (!bindingAccessor) {\r\n                    throw new Error('Don\\'t know how to render binding \"' + value.dataClass +\r\n                                    '\" - no such binding registered. ' +\r\n                                    'Either register the bindng or correct its name.');\r\n                }\r\n\r\n                if (bindingAccessor) {\r\n                    binding = is(bindingAccessor, 'function')\r\n                            ? bindingAccessor.call(value.viewmodel || viewModel, bindingContext)\r\n                            : bindingAccessor;\r\n                }\r\n\r\n            } else {\r\n                // otherwise whole object is the binding\r\n                binding = is(value, 'function') ? value.call(viewModel, bindingContext) : value;\r\n            }\r\n        }\r\n\r\n        render = applyBindings;\r\n\r\n        context = {\r\n            getElement: function () {\r\n                return element;\r\n            }\r\n        };\r\n\r\n        render.call(context);\r\n\r\n        ko.utils.domData.set(element, 'binding', binding);\r\n    }\r\n    /*jslint unparam: false*/\r\n\r\n    export default {\r\n        init: init,\r\n        update: update\r\n    };\r\n\r\n"]}