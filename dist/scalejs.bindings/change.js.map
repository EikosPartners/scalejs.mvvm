{"version":3,"sources":["../../src/scalejs.bindings/change.js"],"names":["is","type","has","object","init","element","valueAccessor","allBindingsAccessor","viewModel","unwrap","utils","unwrapObservable","value","properties","property","handler","changeHandler","bindPropertyChangeHandler","h","currentValue","newValue","call","subscribeChangeHandler","computed","read","val","disposeWhenNodeIsRemoved","hasOwnProperty","initial","apply","update"],"mappings":";;;;;;AACA;;;;AACA;;;;;;AAFA;AAKI,IAAIA,KAAK,kBAAKC,IAAL,CAAUD,EAAnB;AAAA,IACIE,MAAM,kBAAKC,MAAL,CAAYD,GADtB;;AAGA;AACA,SAASE,IAAT,CAAcC,OAAd,EAAuBC,aAAvB,EAAsCC,mBAAtC,EAA2DC,SAA3D,EAAsE;AAClE,QAAI,CAACN,IAAIM,SAAJ,CAAL,EAAqB;AACjB;AACH;;AAED,QAAIC,SAAS,mBAAGC,KAAH,CAASC,gBAAtB;AAAA,QACIC,QAAQN,eADZ;AAAA,QAEIO,aAAaJ,OAAOG,KAAP,CAFjB;AAAA,QAGIE,QAHJ;AAAA,QAIIC,OAJJ;;AAKI;AACAC,iBANJ;;AAQA,aAASC,yBAAT,CAAmCC,CAAnC,EAAsCC,YAAtC,EAAoD;AAChD,eAAO,UAAUC,QAAV,EAAoB;AACvB,gBAAIA,aAAaD,YAAjB,EAA+B;AAC3BA,+BAAeC,QAAf;AACAF,kBAAEG,IAAF,CAAOb,SAAP,EAAkBY,QAAlB,EAA4Bf,OAA5B;AACH;AACJ,SALD;AAMH;;AAED,aAASiB,sBAAT,CAAgCR,QAAhC,EAA0CE,aAA1C,EAAyD;AACrD,2BAAGO,QAAH,CAAY;AACRC,kBAAM,gBAAY;AACd,oBAAIC,MAAMhB,OAAOD,UAAUM,QAAV,CAAP,CAAV;AACAE,8BAAcS,GAAd;AACH,aAJO;AAKRC,sCAA0BrB;AALlB,SAAZ;AAOH;;AAED,SAAKS,QAAL,IAAiBD,UAAjB,EAA6B;AACzB,YAAIA,WAAWc,cAAX,CAA0Bb,QAA1B,CAAJ,EAAyC;AACrCC,sBAAUF,WAAWC,QAAX,CAAV;AACA,gBAAId,GAAGe,QAAQa,OAAX,EAAoB,UAApB,CAAJ,EAAqC;AACjCb,wBAAQa,OAAR,CAAgBC,KAAhB,CAAsBrB,SAAtB,EAAiC,CAACC,OAAOD,UAAUM,QAAV,CAAP,CAAD,EAA8BT,OAA9B,CAAjC;AACH;AACD,gBAAIL,GAAGe,QAAQe,MAAX,EAAmB,UAAnB,CAAJ,EAAoC;AAChCd,gCAAgBC,0BAA0BF,QAAQe,MAAlC,EAA0CrB,OAAOD,UAAUM,QAAV,CAAP,CAA1C,CAAhB;AACH;AACD,gBAAId,GAAGe,OAAH,EAAY,UAAZ,CAAJ,EAA6B;AACzBC,gCAAgBC,0BAA0BF,OAA1B,EAAmCN,OAAOD,UAAUM,QAAV,CAAP,CAAnC,CAAhB;AACH;AACD,gBAAIE,aAAJ,EAAmB;AACfM,uCAAuBR,QAAvB,EAAiCE,aAAjC;AACH;AACJ;AACJ;AACJ;AACD;;kBAEe;AACXZ,UAAMA;AADK,C","file":"change.js","sourcesContent":["/*global define*/\r\nimport ko from 'knockout';\r\nimport core from 'scalejs.core';\r\n    \r\n\r\n    var is = core.type.is,\r\n        has = core.object.has;\r\n\r\n    /*jslint unparam: true*/\r\n    function init(element, valueAccessor, allBindingsAccessor, viewModel) {\r\n        if (!has(viewModel)) {\r\n            return;\r\n        }\r\n\r\n        var unwrap = ko.utils.unwrapObservable,\r\n            value = valueAccessor(),\r\n            properties = unwrap(value),\r\n            property,\r\n            handler,\r\n            //currentValue,\r\n            changeHandler;\r\n\r\n        function bindPropertyChangeHandler(h, currentValue) {\r\n            return function (newValue) {\r\n                if (newValue !== currentValue) {\r\n                    currentValue = newValue;\r\n                    h.call(viewModel, newValue, element);\r\n                }\r\n            };\r\n        }\r\n\r\n        function subscribeChangeHandler(property, changeHandler) {\r\n            ko.computed({\r\n                read: function () {\r\n                    var val = unwrap(viewModel[property]);\r\n                    changeHandler(val);\r\n                },\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n        }\r\n\r\n        for (property in properties) {\r\n            if (properties.hasOwnProperty(property)) {\r\n                handler = properties[property];\r\n                if (is(handler.initial, 'function')) {\r\n                    handler.initial.apply(viewModel, [unwrap(viewModel[property]), element]);\r\n                }\r\n                if (is(handler.update, 'function')) {\r\n                    changeHandler = bindPropertyChangeHandler(handler.update, unwrap(viewModel[property]));\r\n                }\r\n                if (is(handler, 'function')) {\r\n                    changeHandler = bindPropertyChangeHandler(handler, unwrap(viewModel[property]));\r\n                }\r\n                if (changeHandler) {\r\n                    subscribeChangeHandler(property, changeHandler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /*jslint unparam: false*/\r\n\r\n    export default {\r\n        init: init\r\n    };\r\n\r\n"]}