{"version":3,"sources":["../../src/scalejs.bindings/transitionable.js"],"names":[],"mappings":"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","file":"transitionable.js","sourcesContent":["/// <reference path=\"../scripts/_references.js\" />\r\n/*global console,define,setTimeout*/\r\n/*jslint unparam: true*/\r\nimport core from 'scalejs.core';\r\nimport ko from 'knockout';\r\nimport koUtils from '../scalejs.mvvm/ko.utils';\r\nimport 'scalejs.statechart-scion';\r\n    /// <param name=\"ko\" value=\"window.ko\"/>\r\n    \r\n\r\n    var array = core.array,\r\n        merge = core.object.merge,\r\n        statechart = core.state.builder.builder({ logStatesEnteredAndExited: false }),\r\n        state = core.state.builder.state,\r\n        isObservable = ko.isObservable,\r\n        unwrap = ko.utils.unwrapObservable,\r\n        //observable = ko.observable,\r\n        computed = ko.computed,\r\n        cloneNodes = koUtils.cloneNodes;\r\n\r\n\r\n    function transitionManager(element, viewModel, spec) {\r\n        var transitionsStatechart,\r\n            transitionableState = spec.transitionableState,\r\n            savedNodes,\r\n            model;\r\n\r\n        function updatetransitionableState(newState) {\r\n            // update visual state later (to make sure we are not in statechart step)\r\n            if (isObservable(transitionableState)) {\r\n                setTimeout(function () {\r\n                    transitionableState(newState);\r\n                }, 0);\r\n            }\r\n        }\r\n\r\n        function renderChild() {\r\n            ko.virtualElements.setDomNodeChildren(element, cloneNodes(savedNodes));\r\n            ko.applyBindingsToDescendants(viewModel, element);\r\n        }\r\n\r\n        function clearChild() {\r\n            savedNodes = cloneNodes(ko.virtualElements.childNodes(element), true);\r\n            ko.virtualElements.emptyNode(element);\r\n        }\r\n\r\n        function runTransition(transitions) {\r\n            var transition = transitions.shift(),\r\n                child = ko.virtualElements.childNodes(element).filter(function (e) {\r\n                    return e.nodeType === 1;\r\n                })[0];\r\n\r\n            if (transition) {\r\n                setTimeout(function () {\r\n                    var context = {\r\n                        element: child,\r\n                        viewModel: viewModel,\r\n                        renderChild: renderChild\r\n                    };\r\n\r\n                    transition.call(context, function () {\r\n                        transitionsStatechart.send('transition.finished', { transition: transition });\r\n                    });\r\n                }, 0);\r\n            }\r\n        }\r\n\r\n        function start() {\r\n            clearChild();\r\n\r\n            computed({\r\n                read: function () {\r\n                    var st = unwrap(transitionableState);\r\n                    if (st) {\r\n                        setTimeout(function () {\r\n                            transitionsStatechart.send(st);\r\n                        }, 0);\r\n                    }\r\n                },\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n\r\n            transitionsStatechart.start();\r\n        }\r\n\r\n        model = merge({\r\n            inTransitions: [],\r\n            outTransitions: []\r\n        }, spec);\r\n\r\n        /*jslint white: true*/\r\n        transitionsStatechart = statechart(\r\n            // Initial\r\n            state('in.started')\r\n                .onEntry(function () {\r\n                    this.transitions = array.copy(model.inTransitions);\r\n                })\r\n                .on(function () {\r\n                    return this.transitions.length > 0;\r\n                }).goto('in.transitioning')\r\n                .goto('in.finished'),\r\n\r\n            state('in.transitioning')\r\n                .onEntry(function () {\r\n                    runTransition(this.transitions);\r\n                })\r\n                .on('transition.finished', function () {\r\n                    return this.transitions.length > 0;\r\n                }).goto('in.transitioning')\r\n                .on('transition.finished').goto('in.finished'),\r\n\r\n            state('in.finished')\r\n                .onEntry(function () {\r\n                    updatetransitionableState('in.finished');\r\n                })\r\n                .on('out.started').goto('out.started'),\r\n\r\n            state('out.started')\r\n                .onEntry(function () {\r\n                    this.transitions = array.copy(model.outTransitions);\r\n                })\r\n                .on(function () {\r\n                    return this.transitions.length > 0;\r\n                }).goto('out.transitioning')\r\n                .goto('out.finished'),\r\n\r\n            state('out.transitioning')\r\n                .onEntry(function () {\r\n                    runTransition(this.transitions);\r\n                })\r\n                .on('transition.finished', function () {\r\n                    return this.transitions.length > 0;\r\n                }).goto('out.transitioning')\r\n                .on('transition.finished').goto('out.finished'),\r\n\r\n            // Finished transitioning\r\n            state('out.finished')\r\n                .onEntry(function () {\r\n                    updatetransitionableState('out.finished');\r\n                })\r\n                .on('in.transitioning').goto('in.started')\r\n        );\r\n        /*jslint white: false*/\r\n\r\n        return {\r\n            start: start\r\n        };\r\n    }\r\n\r\n    function init(\r\n        element,\r\n        valueAccessor,\r\n        allBindingsAccessor,\r\n        viewModel,\r\n        bindingContext\r\n    ) {\r\n        return { 'controlsDescendantBindings' : true };\r\n    }\r\n\r\n    function update(\r\n        element,\r\n        valueAccessor,\r\n        allBindingsAccessor,\r\n        viewModel,\r\n        bindingContext\r\n    ) {\r\n        var options = valueAccessor(),\r\n            tm = transitionManager(element, viewModel, options);\r\n\r\n        tm.start();\r\n    }\r\n\r\n    export default {\r\n        init: init,\r\n        update: update\r\n    };\r\n\r\n/*jslint unparam: false*/\r\n\r\n"]}