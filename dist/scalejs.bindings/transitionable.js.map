{"version":3,"sources":["../../src/scalejs.bindings/transitionable.js"],"names":["array","merge","object","statechart","state","builder","logStatesEnteredAndExited","isObservable","unwrap","utils","unwrapObservable","computed","cloneNodes","transitionManager","element","viewModel","spec","transitionsStatechart","transitionableState","savedNodes","model","updatetransitionableState","newState","setTimeout","renderChild","virtualElements","setDomNodeChildren","applyBindingsToDescendants","clearChild","childNodes","emptyNode","runTransition","transitions","transition","shift","child","filter","e","nodeType","context","call","send","start","read","st","disposeWhenNodeIsRemoved","inTransitions","outTransitions","onEntry","copy","on","length","goto","init","valueAccessor","allBindingsAccessor","bindingContext","update","options","tm"],"mappings":"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","file":"transitionable.js","sourcesContent":["/// <reference path=\"../scripts/_references.js\" />\r\n/*global console,define,setTimeout*/\r\n/*jslint unparam: true*/\r\nimport core from 'scalejs.core';\r\nimport ko from 'knockout';\r\nimport koUtils from '../scalejs.mvvm/ko.utils';\r\nimport 'scalejs.statechart-scion';\r\n    /// <param name=\"ko\" value=\"window.ko\"/>\r\n    \r\n\r\n    var array = core.array,\r\n        merge = core.object.merge,\r\n        statechart = core.state.builder.builder({ logStatesEnteredAndExited: false }),\r\n        state = core.state.builder.state,\r\n        isObservable = ko.isObservable,\r\n        unwrap = ko.utils.unwrapObservable,\r\n        //observable = ko.observable,\r\n        computed = ko.computed,\r\n        cloneNodes = koUtils.cloneNodes;\r\n\r\n\r\n    function transitionManager(element, viewModel, spec) {\r\n        var transitionsStatechart,\r\n            transitionableState = spec.transitionableState,\r\n            savedNodes,\r\n            model;\r\n\r\n        function updatetransitionableState(newState) {\r\n            // update visual state later (to make sure we are not in statechart step)\r\n            if (isObservable(transitionableState)) {\r\n                setTimeout(function () {\r\n                    transitionableState(newState);\r\n                }, 0);\r\n            }\r\n        }\r\n\r\n        function renderChild() {\r\n            ko.virtualElements.setDomNodeChildren(element, cloneNodes(savedNodes));\r\n            ko.applyBindingsToDescendants(viewModel, element);\r\n        }\r\n\r\n        function clearChild() {\r\n            savedNodes = cloneNodes(ko.virtualElements.childNodes(element), true);\r\n            ko.virtualElements.emptyNode(element);\r\n        }\r\n\r\n        function runTransition(transitions) {\r\n            var transition = transitions.shift(),\r\n                child = ko.virtualElements.childNodes(element).filter(function (e) {\r\n                    return e.nodeType === 1;\r\n                })[0];\r\n\r\n            if (transition) {\r\n                setTimeout(function () {\r\n                    var context = {\r\n                        element: child,\r\n                        viewModel: viewModel,\r\n                        renderChild: renderChild\r\n                    };\r\n\r\n                    transition.call(context, function () {\r\n                        transitionsStatechart.send('transition.finished', { transition: transition });\r\n                    });\r\n                }, 0);\r\n            }\r\n        }\r\n\r\n        function start() {\r\n            clearChild();\r\n\r\n            computed({\r\n                read: function () {\r\n                    var st = unwrap(transitionableState);\r\n                    if (st) {\r\n                        setTimeout(function () {\r\n                            transitionsStatechart.send(st);\r\n                        }, 0);\r\n                    }\r\n                },\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n\r\n            transitionsStatechart.start();\r\n        }\r\n\r\n        model = merge({\r\n            inTransitions: [],\r\n            outTransitions: []\r\n        }, spec);\r\n\r\n        /*jslint white: true*/\r\n        transitionsStatechart = statechart(\r\n            // Initial\r\n            state('in.started')\r\n                .onEntry(function () {\r\n                    this.transitions = array.copy(model.inTransitions);\r\n                })\r\n                .on(function () {\r\n                    return this.transitions.length > 0;\r\n                }).goto('in.transitioning')\r\n                .goto('in.finished'),\r\n\r\n            state('in.transitioning')\r\n                .onEntry(function () {\r\n                    runTransition(this.transitions);\r\n                })\r\n                .on('transition.finished', function () {\r\n                    return this.transitions.length > 0;\r\n                }).goto('in.transitioning')\r\n                .on('transition.finished').goto('in.finished'),\r\n\r\n            state('in.finished')\r\n                .onEntry(function () {\r\n                    updatetransitionableState('in.finished');\r\n                })\r\n                .on('out.started').goto('out.started'),\r\n\r\n            state('out.started')\r\n                .onEntry(function () {\r\n                    this.transitions = array.copy(model.outTransitions);\r\n                })\r\n                .on(function () {\r\n                    return this.transitions.length > 0;\r\n                }).goto('out.transitioning')\r\n                .goto('out.finished'),\r\n\r\n            state('out.transitioning')\r\n                .onEntry(function () {\r\n                    runTransition(this.transitions);\r\n                })\r\n                .on('transition.finished', function () {\r\n                    return this.transitions.length > 0;\r\n                }).goto('out.transitioning')\r\n                .on('transition.finished').goto('out.finished'),\r\n\r\n            // Finished transitioning\r\n            state('out.finished')\r\n                .onEntry(function () {\r\n                    updatetransitionableState('out.finished');\r\n                })\r\n                .on('in.transitioning').goto('in.started')\r\n        );\r\n        /*jslint white: false*/\r\n\r\n        return {\r\n            start: start\r\n        };\r\n    }\r\n\r\n    function init(\r\n        element,\r\n        valueAccessor,\r\n        allBindingsAccessor,\r\n        viewModel,\r\n        bindingContext\r\n    ) {\r\n        return { 'controlsDescendantBindings' : true };\r\n    }\r\n\r\n    function update(\r\n        element,\r\n        valueAccessor,\r\n        allBindingsAccessor,\r\n        viewModel,\r\n        bindingContext\r\n    ) {\r\n        var options = valueAccessor(),\r\n            tm = transitionManager(element, viewModel, options);\r\n\r\n        tm.start();\r\n    }\r\n\r\n    export default {\r\n        init: init,\r\n        update: update\r\n    };\r\n\r\n/*jslint unparam: false*/\r\n\r\n"]}