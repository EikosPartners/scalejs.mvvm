{"version":3,"sources":["../../src/scalejs.mvvm/classBindingProvider.js"],"names":[],"mappings":"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","file":"classBindingProvider.js","sourcesContent":["// knockout-classBindingProvider 0.5.0 | (c) 2013 Ryan Niemeyer |  http://www.opensource.org/licenses/mit-license\r\n;(function (factory) {\r\n    //AMD\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define([\"knockout\", \"exports\"], factory);\r\n        //normal script tag\r\n    } else {\r\n        factory(ko);\r\n    }\r\n}(function (ko, exports, undefined) {\r\n    var objectMap = function (source, mapping) {\r\n        var target, prop;\r\n\r\n        if (!source) {\r\n            return source;\r\n        }\r\n\r\n        target = {};\r\n        for (prop in source) {\r\n            if (source.hasOwnProperty(prop)) {\r\n                target[prop] = mapping(source[prop], prop, source);\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n\r\n    var makeValueAccessor = function (value) {\r\n        return function () {\r\n            return value;\r\n        };\r\n    };\r\n\r\n    // Make Knockout think that we're using observable view models by adding a \"_subscribable\" function to all binding contexts.\r\n    // This makes Knockout watch any observables accessed in the getBindingAccessors function.\r\n    // Hopefully this hack will be unnecessary in later versions.\r\n    if (ko.version >= \"3.0.0\") {\r\n        (function () {\r\n            // Create and retrieve a binding context object\r\n            var dummyDiv = document.createElement('div');\r\n            ko.applyBindings(null, dummyDiv);\r\n            var context = ko.contextFor(dummyDiv);\r\n\r\n            // Add a dummy _subscribable, with a dummy _addNode, to the binding context prototype\r\n            var isMinified = !ko.storedBindingContextForNode,\r\n                subscribableName = isMinified ? 'A' : '_subscribable',\r\n                addNodeName = isMinified ? 'wb' : '_addNode',\r\n                dummySubscribable = function () { };\r\n            dummySubscribable[addNodeName] = dummySubscribable;\r\n            context.constructor.prototype[subscribableName] = dummySubscribable;\r\n\r\n            ko.cleanNode(dummyDiv);\r\n        })();\r\n    }\r\n\r\n    //a bindingProvider that uses something different than data-bind attributes\r\n    //  bindings - an object that contains the binding classes\r\n    //  options - is an object that can include \"attribute\", \"virtualAttribute\", bindingRouter, and \"fallback\" options\r\n    var classBindingsProvider = function (bindings, options) {\r\n        var existingProvider = new ko.bindingProvider(),\r\n            loggedBindings = {};\r\n\r\n        options = options || {};\r\n\r\n        //override the attribute\r\n        this.attribute = options.attribute || \"data-class\";\r\n\r\n        //override the virtual attribute\r\n        this.virtualAttribute = \"ko \" + (options.virtualAttribute || \"class\") + \":\";\r\n\r\n        //fallback to the existing binding provider, if bindings are not found\r\n        this.fallback = options.fallback;\r\n\r\n        //this object holds the binding classes\r\n        this.bindings = bindings || {};\r\n\r\n        //returns a binding class, given the class name and the bindings object\r\n        this.bindingRouter = options.bindingRouter || function (className, bindings) {\r\n            var i, j, classPath, bindingObject;\r\n\r\n            //if the class name matches a property directly, then return it\r\n            if (bindings[className]) {\r\n                return bindings[className];\r\n            }\r\n\r\n            //search for sub-properites that might contain the bindings\r\n            classPath = className.split(\".\");\r\n            bindingObject = bindings;\r\n\r\n            for (i = 0, j = classPath.length; i < j; i++) {\r\n                bindingObject = bindingObject[classPath[i]];\r\n            }\r\n\r\n            return bindingObject;\r\n        };\r\n\r\n        //allow bindings to be registered after instantiation\r\n        this.registerBindings = function (newBindings) {\r\n            ko.utils.extend(this.bindings, newBindings);\r\n        };\r\n\r\n        //determine if an element has any bindings\r\n        this.nodeHasBindings = function (node) {\r\n            var result, value;\r\n\r\n            if (node.nodeType === 1) {\r\n                result = node.getAttribute(this.attribute);\r\n            }\r\n            else if (node.nodeType === 8) {\r\n                value = \"\" + node.nodeValue || node.text;\r\n                result = value.indexOf(this.virtualAttribute) > -1;\r\n            }\r\n\r\n            if (!result && this.fallback) {\r\n                result = existingProvider.nodeHasBindings(node);\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        //return the bindings given a node and the bindingContext\r\n        this.getBindingsFunction = function (getAccessors) {\r\n            return function (node, bindingContext) {\r\n                var i, j, bindingAccessor, binding,\r\n                    result = {},\r\n                    value, index,\r\n                    classes = \"\";\r\n\r\n                if (node.nodeType === 1) {\r\n                    classes = node.getAttribute(this.attribute);\r\n                }\r\n                else if (node.nodeType === 8) {\r\n                    value = \"\" + node.nodeValue || node.text;\r\n                    index = value.indexOf(this.virtualAttribute);\r\n\r\n                    if (index > -1) {\r\n                        classes = value.substring(index + this.virtualAttribute.length);\r\n                    }\r\n                }\r\n\r\n                if (classes) {\r\n                    classes = classes.replace(/^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g, \"\").replace(/(\\s|\\u00A0){2,}/g, \" \").split(' ');\r\n                    //evaluate each class, build a single object to return\r\n                    for (i = 0, j = classes.length; i < j; i++) {\r\n                        bindingAccessor = this.bindingRouter(classes[i], this.bindings);\r\n                        if (bindingAccessor) {\r\n                            binding = typeof bindingAccessor == \"function\" ? bindingAccessor.call(bindingContext.$data, bindingContext, classes) : bindingAccessor;\r\n                            if (getAccessors)\r\n                                binding = objectMap(binding, makeValueAccessor);\r\n                            ko.utils.extend(result, binding);\r\n                        } else {\r\n                            if (options.log) {\r\n                                options.log('No binding function provided for data class \"' +\r\n                                            classes[i] + '\" in element ',\r\n                                            node,\r\n                                            '\\nMake sure data class is spelled correctly ' +\r\n                                            'and that it\\'s binding function is registered.');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (this.fallback) {\r\n                    result = existingProvider[getAccessors ? 'getBindingAccessors' : 'getBindings'](node, bindingContext);\r\n                }\r\n\r\n                if (options.log) {\r\n                    for (var bindingName in result) {\r\n                        if (result.hasOwnProperty(bindingName) &&\r\n                                bindingName !== \"_ko_property_writers\" &&\r\n                                    bindingName !== 'valueUpdate' &&\r\n                                        bindingName !== 'optionsText' &&\r\n                                            bindingName !== 'optionsValue' &&\r\n                                                bindingName !== 'clickBubble' &&\r\n                                                    !ko.bindingHandlers[bindingName] &&\r\n                                                        !loggedBindings[bindingName]) {\r\n                            if (binding) {\r\n                                options.log('Unknown binding handler \"' + bindingName + '\" found in element',\r\n                                            node,\r\n                                            ' defined in data-class \"' + classes + '\" as',\r\n                                            binding,\r\n                                            '\\nMake sure that binding handler\\'s name is spelled correctly ' +\r\n                                            'and that it\\'s properly registered. ' +\r\n                                            '\\nThe binding will be ignored.');\r\n                            } else {\r\n                                options.log('Unknown binding handler \"' + bindingName + '\" in',\r\n                                            node,\r\n                                            '\\nMake sure that it\\'s name spelled correctly and that it\\'s ' +\r\n                                            'properly registered. ' +\r\n                                            '\\nThe binding will be ignored.');\r\n                            }\r\n                            loggedBindings[bindingName] = bindingName;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            };\r\n        };\r\n\r\n        this.getBindings = this.getBindingsFunction(false);\r\n        this.getBindingAccessors = this.getBindingsFunction(true);\r\n    };\r\n\r\n    if (!exports) {\r\n        ko.classBindingProvider = classBindingsProvider;\r\n    }\r\n\r\n    return classBindingsProvider;\r\n}));\r\n"]}