{"version":3,"sources":["../../src/scalejs.mvvm/classBindingProvider.js"],"names":["factory","define","amd","ko","exports","undefined","objectMap","source","mapping","target","prop","hasOwnProperty","makeValueAccessor","value","version","dummyDiv","document","createElement","applyBindings","context","contextFor","isMinified","storedBindingContextForNode","subscribableName","addNodeName","dummySubscribable","constructor","prototype","cleanNode","classBindingsProvider","bindings","options","existingProvider","bindingProvider","loggedBindings","attribute","virtualAttribute","fallback","bindingRouter","className","i","j","classPath","bindingObject","split","length","registerBindings","newBindings","utils","extend","nodeHasBindings","node","result","nodeType","getAttribute","nodeValue","text","indexOf","getBindingsFunction","getAccessors","bindingContext","bindingAccessor","binding","index","classes","substring","replace","call","$data","log","knownBindingHandlers","bindingName","bindingHandlers","getBindings","getBindingAccessors","classBindingProvider"],"mappings":"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","file":"classBindingProvider.js","sourcesContent":["// knockout-classBindingProvider 0.5.0 | (c) 2013 Ryan Niemeyer |  http://www.opensource.org/licenses/mit-license\r\n;(function (factory) {\r\n    //AMD\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define([\"knockout\", \"exports\"], factory);\r\n        //normal script tag\r\n    } else {\r\n        factory(ko);\r\n    }\r\n}(function (ko, exports, undefined) {\r\n    var objectMap = function (source, mapping) {\r\n        var target, prop;\r\n\r\n        if (!source) {\r\n            return source;\r\n        }\r\n\r\n        target = {};\r\n        for (prop in source) {\r\n            if (source.hasOwnProperty(prop)) {\r\n                target[prop] = mapping(source[prop], prop, source);\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n\r\n    var makeValueAccessor = function (value) {\r\n        return function () {\r\n            return value;\r\n        };\r\n    };\r\n\r\n    // Make Knockout think that we're using observable view models by adding a \"_subscribable\" function to all binding contexts.\r\n    // This makes Knockout watch any observables accessed in the getBindingAccessors function.\r\n    // Hopefully this hack will be unnecessary in later versions.\r\n    if (ko.version >= \"3.0.0\") {\r\n        (function () {\r\n            // Create and retrieve a binding context object\r\n            var dummyDiv = document.createElement('div');\r\n            ko.applyBindings(null, dummyDiv);\r\n            var context = ko.contextFor(dummyDiv);\r\n\r\n            // Add a dummy _subscribable, with a dummy _addNode, to the binding context prototype\r\n            var isMinified = !ko.storedBindingContextForNode,\r\n                subscribableName = isMinified ? 'A' : '_subscribable',\r\n                addNodeName = isMinified ? 'wb' : '_addNode',\r\n                dummySubscribable = function () { };\r\n            dummySubscribable[addNodeName] = dummySubscribable;\r\n            context.constructor.prototype[subscribableName] = dummySubscribable;\r\n\r\n            ko.cleanNode(dummyDiv);\r\n        })();\r\n    }\r\n\r\n    //a bindingProvider that uses something different than data-bind attributes\r\n    //  bindings - an object that contains the binding classes\r\n    //  options - is an object that can include \"attribute\", \"virtualAttribute\", bindingRouter, and \"fallback\" options\r\n    var classBindingsProvider = function (bindings, options) {\r\n        var existingProvider = new ko.bindingProvider(),\r\n            loggedBindings = {};\r\n\r\n        options = options || {};\r\n\r\n        //override the attribute\r\n        this.attribute = options.attribute || \"data-class\";\r\n\r\n        //override the virtual attribute\r\n        this.virtualAttribute = \"ko \" + (options.virtualAttribute || \"class\") + \":\";\r\n\r\n        //fallback to the existing binding provider, if bindings are not found\r\n        this.fallback = options.fallback;\r\n\r\n        //this object holds the binding classes\r\n        this.bindings = bindings || {};\r\n\r\n        //returns a binding class, given the class name and the bindings object\r\n        this.bindingRouter = options.bindingRouter || function (className, bindings) {\r\n            var i, j, classPath, bindingObject;\r\n\r\n            //if the class name matches a property directly, then return it\r\n            if (bindings[className]) {\r\n                return bindings[className];\r\n            }\r\n\r\n            //search for sub-properites that might contain the bindings\r\n            classPath = className.split(\".\");\r\n            bindingObject = bindings;\r\n\r\n            for (i = 0, j = classPath.length; i < j; i++) {\r\n                bindingObject = bindingObject[classPath[i]];\r\n            }\r\n\r\n            return bindingObject;\r\n        };\r\n\r\n        //allow bindings to be registered after instantiation\r\n        this.registerBindings = function (newBindings) {\r\n            ko.utils.extend(this.bindings, newBindings);\r\n        };\r\n\r\n        //determine if an element has any bindings\r\n        this.nodeHasBindings = function (node) {\r\n            var result, value;\r\n\r\n            if (node.nodeType === 1) {\r\n                result = node.getAttribute(this.attribute);\r\n            }\r\n            else if (node.nodeType === 8) {\r\n                value = \"\" + node.nodeValue || node.text;\r\n                result = value.indexOf(this.virtualAttribute) > -1;\r\n            }\r\n\r\n            if (!result && this.fallback) {\r\n                result = existingProvider.nodeHasBindings(node);\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        //return the bindings given a node and the bindingContext\r\n        this.getBindingsFunction = function (getAccessors) {\r\n            return function (node, bindingContext) {\r\n                var i, j, bindingAccessor, binding,\r\n                    result = {},\r\n                    value, index,\r\n                    classes = \"\";\r\n\r\n                if (node.nodeType === 1) {\r\n                    classes = node.getAttribute(this.attribute);\r\n                }\r\n                else if (node.nodeType === 8) {\r\n                    value = \"\" + node.nodeValue || node.text;\r\n                    index = value.indexOf(this.virtualAttribute);\r\n\r\n                    if (index > -1) {\r\n                        classes = value.substring(index + this.virtualAttribute.length);\r\n                    }\r\n                }\r\n\r\n                if (classes) {\r\n                    classes = classes.replace(/^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g, \"\").replace(/(\\s|\\u00A0){2,}/g, \" \").split(' ');\r\n                    //evaluate each class, build a single object to return\r\n                    for (i = 0, j = classes.length; i < j; i++) {\r\n                        bindingAccessor = this.bindingRouter(classes[i], this.bindings);\r\n                        if (bindingAccessor) {\r\n                            binding = typeof bindingAccessor == \"function\" ? bindingAccessor.call(bindingContext.$data, bindingContext, classes) : bindingAccessor;\r\n                            if (getAccessors)\r\n                                binding = objectMap(binding, makeValueAccessor);\r\n                            ko.utils.extend(result, binding);\r\n                        } else {\r\n                            if (options.log) {\r\n                                options.log('No binding function provided for data class \"' +\r\n                                            classes[i] + '\" in element ',\r\n                                            node,\r\n                                            '\\nMake sure data class is spelled correctly ' +\r\n                                            'and that it\\'s binding function is registered.');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (this.fallback) {\r\n                    result = existingProvider[getAccessors ? 'getBindingAccessors' : 'getBindings'](node, bindingContext);\r\n                }\r\n\r\n                if (options.log) {\r\n                    const knownBindingHandlers = [\r\n                        '_ko_property_writers',\r\n                        'valueUpdate',\r\n                        'optionsText',\r\n                        'optionsValue',\r\n                        'clickBubble',\r\n                        'valueAllowUnset',\r\n                        ''\r\n                    ];\r\n                    for (var bindingName in result) {\r\n                        if (result.hasOwnProperty(bindingName)\r\n                            && knownBindingHandlers.indexOf(bindingName) === -1\r\n                            && !ko.bindingHandlers[bindingName]\r\n                            && !loggedBindings[bindingName]) {\r\n\r\n                            if (binding) {\r\n                                options.log('Unknown binding handler \"' + bindingName + '\" found in element',\r\n                                            node,\r\n                                            ' defined in data-class \"' + classes + '\" as',\r\n                                            binding,\r\n                                            '\\nMake sure that binding handler\\'s name is spelled correctly ' +\r\n                                            'and that it\\'s properly registered. ' +\r\n                                            '\\nThe binding will be ignored.');\r\n                            } else {\r\n                                options.log('Unknown binding handler \"' + bindingName + '\" in',\r\n                                            node,\r\n                                            '\\nMake sure that it\\'s name spelled correctly and that it\\'s ' +\r\n                                            'properly registered. ' +\r\n                                            '\\nThe binding will be ignored.');\r\n                            }\r\n                            \r\n                            loggedBindings[bindingName] = bindingName;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            };\r\n        };\r\n\r\n        this.getBindings = this.getBindingsFunction(false);\r\n        this.getBindingAccessors = this.getBindingsFunction(true);\r\n    };\r\n\r\n    if (!exports) {\r\n        ko.classBindingProvider = classBindingsProvider;\r\n    }\r\n\r\n    return classBindingsProvider;\r\n}));\r\n"]}