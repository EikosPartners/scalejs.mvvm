{"version":3,"sources":["../../src/scalejs.mvvm/htmlTemplateSource.js"],"names":[],"mappings":";;;;;;AACA;;;;AACA;;;;;;;;;AAGI,IAAI,UAAU,kBAAK,KAAL,CAAW,OAAzB;IACI,MAAM,kBAAK,MAAL,CAAY,GADtB;IAEI,iBAAiB,IAAI,mBAAG,oBAAP,EAFrB;IAGI,YAAY;AACR,UAAM;AADE,CAHhB;;AAOA,SAAS,iBAAT,CAA6B,aAA7B,EAA6C;;;;AAIzC,QAAI,MAAM,SAAS,aAAT,CAAuB,KAAvB,CAAV;;AAEA,QAAI,OAAO,KAAP,KAAiB,WAArB,EAAkC;AAC9B,cAAM,SAAN,CAAgB,kBAAhB,CAAmC,GAAnC,EAAwC,aAAxC;AACH,KAFD,MAEO;AACH,YAAI,SAAJ,GAAgB,aAAhB;AACH;;AAED,YAAQ,IAAI,UAAZ,EAAwB,OAAxB,CAAgC,UAAW,SAAX,EAAuB;AACnD,YAAI,UAAU,QAAV,KAAuB,CAAvB,IAA4B,IAAI,SAAJ,EAAe,IAAf,CAAhC,EAAsD;AAClD,sBAAU,UAAU,EAApB,IAA0B,UAAU,SAApC;AACH;AACJ,KAJD;AAKH;;AAED,SAAS,sBAAT,GAAmC;AAC/B,WAAO,SAAP;AACH;;AAED,SAAS,kBAAT,CAA8B,QAA9B,EAAyC;;AAErC,QAAK,oBAAoB,OAAzB,EAAmC;AAC/B,eAAO;AACH,mBAAO,mBAAG,eAAH,CAAmB,UAAnB,CAA8B,SAA9B,CACF,KADE,CACI,IADJ,CACS,EAAE,YAAY,QAAd,EADT;AADJ,SAAP;AAIH;;AAED,WAAO;AACH,cAAM,cAAW,GAAX,EAAgB,KAAhB,EAAwB;AAC1B,gBAAI,CAAC,IAAI,UAAU,IAAd,EAAoB,QAApB,CAAL,EAAoC;AAChC,0BAAU,IAAV,CAAe,QAAf,IAA2B,EAA3B;AACH;;;AAGD,gBAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AACxB,uBAAO,UAAU,IAAV,CAAe,QAAf,EAAyB,GAAzB,CAAP;AACH;;;AAGD,sBAAU,IAAV,CAAe,QAAf,EAAyB,GAAzB,IAAgC,KAAhC;AACH,SAbE;AAcH,cAAM,cAAW,KAAX,EAAmB;;;AAGrB,gBAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AACxB,uBAAO,UAAU,QAAV,CAAP;AACH;;AAED,kBAAM,IAAI,KAAJ,CAAU,sCACA,QADA,GACW,kBADX,GACgC,KADhC,GACwC,IADxC,GAEA,uCAFV,CAAN;AAGH;AAxBE,KAAP;AA0BH;;AAED,eAAe,kBAAf,GAAoC,kBAApC;;AAEA,mBAAG,iBAAH,CAAqB,cAArB;;kBAEe;AACX,uBAAmB,iBADR;AAEX,4BAAyB;AAFd,C","file":"htmlTemplateSource.js","sourcesContent":["/*global define,document,WinJS*/\r\nimport ko from 'knockout';\r\nimport core from 'scalejs.core';\r\n    \r\n\r\n    var toArray = core.array.toArray,\r\n        has = core.object.has,\r\n        templateEngine = new ko.nativeTemplateEngine(),\r\n        templates = {\r\n            data: { }\r\n        };\r\n\r\n    function registerTemplates ( templatesHtml ) {\r\n        // iterate through all templates (e.g. children of root in templatesHtml)\r\n        // for every child get its templateId and templateHtml\r\n        // and add it to 'templates'\r\n        var div = document.createElement('div');\r\n\r\n        if (typeof WinJS !== 'undefined') {\r\n            WinJS.Utilities.setInnerHTMLUnsafe(div, templatesHtml);\r\n        } else {\r\n            div.innerHTML = templatesHtml;\r\n        }\r\n\r\n        toArray(div.childNodes).forEach(function ( childNode ) {\r\n            if (childNode.nodeType === 1 && has(childNode, 'id')) {\r\n                templates[childNode.id] = childNode.innerHTML;\r\n            }\r\n        });\r\n    }\r\n\r\n    function getRegisteredTemplates () {\r\n        return templates;\r\n    }\r\n\r\n    function makeTemplateSource ( template ) {\r\n\r\n        if ( template instanceof Element ) {\r\n            return {\r\n                nodes: ko.templateSources.domElement.prototype\r\n                    .nodes.bind({ domElement: template })\r\n            };\r\n        }\r\n\r\n        return {\r\n            data: function ( key, value ) {\r\n                if (!has(templates.data, template)) {\r\n                    templates.data[template] = { };\r\n                }\r\n\r\n                // if called with only key then return the associated value\r\n                if (arguments.length === 1) {\r\n                    return templates.data[template][key];\r\n                }\r\n\r\n                // if called with key and value then store the value\r\n                templates.data[template][key] = value;\r\n            },\r\n            text: function ( value ) {\r\n                // if no value return the template content\r\n                // since that's what KO wants\r\n                if (arguments.length === 0) {\r\n                    return templates[template];\r\n                }\r\n\r\n                throw new Error('An attempt to override template \"' +\r\n                                template + '\" with content \"' + value + '\" ' +\r\n                                'Template overriding is not supported.');\r\n            }\r\n        };\r\n    }\r\n\r\n    templateEngine.makeTemplateSource = makeTemplateSource;\r\n\r\n    ko.setTemplateEngine(templateEngine);\r\n\r\n    export default {\r\n        registerTemplates: registerTemplates,\r\n        getRegisteredTemplates : getRegisteredTemplates\r\n    };\r\n\r\n"]}